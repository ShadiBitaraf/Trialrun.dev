{"file":"DemoConfigList.vue.mjs","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA,UAAM,EAAE,UAAW,IAAG,WAAY;AAClC,UAAM,KAAK,UAAU;AAGnB,UAAM,UAAU,IAAI,EAAE;AACtB,UAAM,UAAU,IAAI,IAAI;AACxB,UAAM,mBAAmB,IAAI,KAAK;AAClC,UAAM,iBAAiB,IAAI,IAAI;AAE/B,UAAM,OAAO;AAMb,mBAAe,iBAAiB;AAC9B,cAAQ,QAAQ;AAChB,UAAI;AACF,cAAM,gBAAgB,MAAM,QAAQ,WAAW,IAAI,aAAa,CAAC;AACjE,gBAAQ,QAAQ,cAAc,KAAK,IAAI,CAAAA,SAAQ;;AAAA;AAAA,YAC7C,IAAIA,KAAI;AAAA,YACR,GAAGA,KAAI,KAAM;AAAA,YACb,aAAW,KAAAA,KAAI,KAAM,EAAC,cAAX,mBAAsB,aAAY,oBAAI,KAAM;AAAA,UAC/D;AAAA,SAAQ;AAAA,MACH,SAAQ,OAAO;AACd,gBAAQ,MAAM,gCAAgC,KAAK;AACnD,cAAM,oCAAoC;AAAA,MAChD,UAAc;AACR,gBAAQ,QAAQ;AAAA,MACjB;AAAA,IACF;AAED,aAAS,WAAW,QAAQ;AAC1B,WAAK,QAAQ,MAAM;AAAA,IACpB;AAED,aAAS,cAAc,QAAQ;AAC7B,qBAAe,QAAQ;AACvB,uBAAiB,QAAQ;AAAA,IAC1B;AAED,mBAAe,eAAe;AAC5B,UAAI,CAAC,eAAe,MAAO;AAE3B,UAAI;AACF,cAAM,UAAU,IAAI,IAAI,eAAe,eAAe,MAAM,EAAE,CAAC;AAC/D,cAAM,eAAgB;AACtB,yBAAiB,QAAQ;AACzB,uBAAe,QAAQ;AAAA,MACxB,SAAQ,OAAO;AACd,gBAAQ,MAAM,+BAA+B,KAAK;AAClD,cAAM,qCAAqC;AAAA,MAC5C;AAAA,IACF;AAED,aAAS,WAAW,MAAM;AACxB,UAAI,CAAC,KAAM,QAAO;AAClB,aAAO,IAAI,KAAK,IAAI,EAAE,mBAAmB,SAAS;AAAA,QAChD,MAAM;AAAA,QACN,OAAO;AAAA,QACP,KAAK;AAAA,MACX,CAAK;AAAA,IACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["doc"],"sources":["../../../../components/DemoConfigList.vue"],"sourcesContent":["<template>\r\n    <div class=\"bg-white rounded-lg shadow-md p-4\">\r\n      <div class=\"flex justify-between items-center mb-4\">\r\n        <h2 class=\"text-xl font-bold\">Demo Configurations</h2>\r\n        <Button @click=\"refreshConfigs\">\r\n          <RefreshCcw class=\"h-4 w-4 mr-2\" />\r\n          Refresh\r\n        </Button>\r\n      </div>\r\n  \r\n      <div v-if=\"loading\" class=\"flex justify-center p-8\">\r\n        <!-- <Spinner class=\"h-8 w-8 text-primary\" /> -->\r\n      </div>\r\n  \r\n      <div v-else-if=\"configs.length === 0\" class=\"text-center p-8 text-gray-500\">\r\n        No demo configurations found. Create one to get started.\r\n      </div>\r\n  \r\n      <Table v-else>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Name</TableHead>\r\n            <TableHead>Description</TableHead>\r\n            <TableHead>Created At</TableHead>\r\n            <TableHead>Actions</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          <TableRow v-for=\"config in configs\" :key=\"config.id\">\r\n            <TableCell>{{ config.name }}</TableCell>\r\n            <TableCell>{{ config.description }}</TableCell>\r\n            <TableCell>{{ formatDate(config.createdAt) }}</TableCell>\r\n            <TableCell>\r\n              <div class=\"flex space-x-2\">\r\n                <Button variant=\"outline\" size=\"sm\" @click=\"editConfig(config)\">\r\n                  <Edit class=\"h-4 w-4 mr-1\" />\r\n                  Edit\r\n                </Button>\r\n                <Button variant=\"destructive\" size=\"sm\" @click=\"confirmDelete(config)\">\r\n                  <Trash class=\"h-4 w-4 mr-1\" />\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n  \r\n      <AlertDialog :open=\"showDeleteDialog\" @update:open=\"showDeleteDialog = $event\">\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle>Are you sure?</AlertDialogTitle>\r\n            <AlertDialogDescription>\r\n              This will permanently delete the demo configuration \"{{ configToDelete?.name }}\".\r\n              This action cannot be undone.\r\n            </AlertDialogDescription>\r\n          </AlertDialogHeader>\r\n          <AlertDialogFooter>\r\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n            <AlertDialogAction @click=\"deleteConfig\">Delete</AlertDialogAction>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue'\r\n  import { collection, getDocs, deleteDoc, doc } from 'firebase/firestore'\r\n  \r\n  import { Edit, Trash, RefreshCcw } from 'lucide-vue-next'\r\n\r\n\r\n  // Replace the direct import\r\n// import { db } from '~/plugins/firebase'\r\n\r\n// Use Nuxt's composable to access the plugin\r\nconst { $firebase } = useNuxtApp()\r\nconst db = $firebase.db\r\n\r\n  \r\n  const configs = ref([])\r\n  const loading = ref(true)\r\n  const showDeleteDialog = ref(false)\r\n  const configToDelete = ref(null)\r\n  \r\n  const emit = defineEmits(['edit'])\r\n  \r\n  onMounted(() => {\r\n    refreshConfigs()\r\n  })\r\n  \r\n  async function refreshConfigs() {\r\n    loading.value = true\r\n    try {\r\n      const querySnapshot = await getDocs(collection(db, 'demoConfigs'))\r\n      configs.value = querySnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n        createdAt: doc.data().createdAt?.toDate() || new Date()\r\n      }))\r\n    } catch (error) {\r\n      console.error('Error fetching demo configs:', error)\r\n      alert('Failed to load demo configurations')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n  \r\n  function editConfig(config) {\r\n    emit('edit', config)\r\n  }\r\n  \r\n  function confirmDelete(config) {\r\n    configToDelete.value = config\r\n    showDeleteDialog.value = true\r\n  }\r\n  \r\n  async function deleteConfig() {\r\n    if (!configToDelete.value) return\r\n    \r\n    try {\r\n      await deleteDoc(doc(db, 'demoConfigs', configToDelete.value.id))\r\n      await refreshConfigs()\r\n      showDeleteDialog.value = false\r\n      configToDelete.value = null\r\n    } catch (error) {\r\n      console.error('Error deleting demo config:', error)\r\n      alert('Failed to delete demo configuration')\r\n    }\r\n  }\r\n  \r\n  function formatDate(date) {\r\n    if (!date) return 'N/A'\r\n    return new Date(date).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    })\r\n  }\r\n  </script>\r\n  "],"version":3}
{"version":3,"file":"DemoConfigForm.vue.mjs","sources":["../../../../components/DemoConfigForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"bg-white rounded-lg shadow-md p-6\">\r\n      <h2 class=\"text-xl font-bold mb-6\">{{ isEditing ? 'Edit' : 'Create' }} Demo Configuration</h2>\r\n      \r\n      <form @submit.prevent=\"saveConfig\">\r\n        <div class=\"space-y-4\">\r\n          <div class=\"grid grid-cols-1 gap-4\">\r\n            <div class=\"space-y-2\">\r\n              <Label for=\"name\">Name</Label>\r\n              <Input id=\"name\" v-model=\"form.name\" required placeholder=\"Enter configuration name\" />\r\n            </div>\r\n            \r\n            <div class=\"space-y-2\">\r\n              <Label for=\"description\">Description</Label>\r\n              <Textarea \r\n                id=\"description\" \r\n                v-model=\"form.description\" \r\n                placeholder=\"Enter configuration description\"\r\n                rows=\"3\"\r\n              />\r\n            </div>\r\n            \r\n            <div class=\"space-y-2\">\r\n              <Label for=\"settings\">Settings (JSON)</Label>\r\n              <Textarea \r\n                id=\"settings\" \r\n                v-model=\"settingsJson\" \r\n                placeholder=\"Enter JSON settings\"\r\n                rows=\"6\"\r\n                class=\"font-mono text-sm\"\r\n                @blur=\"validateJson\"\r\n              />\r\n              <p v-if=\"jsonError\" class=\"text-red-500 text-sm\">{{ jsonError }}</p>\r\n            </div>\r\n            \r\n            <div class=\"space-y-2\">\r\n              <Label for=\"isActive\">Status</Label>\r\n              <div class=\"flex items-center space-x-2\">\r\n                <Switch id=\"isActive\" v-model=\"form.isActive\" />\r\n                <Label for=\"isActive\">{{ form.isActive ? 'Active' : 'Inactive' }}</Label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"flex justify-end space-x-2 pt-4\">\r\n            <Button type=\"button\" variant=\"outline\" @click=\"resetForm\">\r\n              {{ isEditing ? 'Cancel' : 'Reset' }}\r\n            </Button>\r\n            <Button type=\"submit\" :disabled=\"saving\">\r\n              <Loader2 v-if=\"saving\" class=\"mr-2 h-4 w-4 animate-spin\" />\r\n              {{ isEditing ? 'Update' : 'Create' }} Config\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, computed, watch } from 'vue'\r\n  import { collection, addDoc, updateDoc, doc, serverTimestamp } from 'firebase/firestore'\r\n  // import { db } from '~/plugins/firebase'\r\n  import { Loader2 } from 'lucide-vue-next'\r\n  \r\n\r\n  const { $firebase } = useNuxtApp()\r\nconst db = $firebase.db\r\n\r\n  const props = defineProps({\r\n    config: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  })\r\n  \r\n  const emit = defineEmits(['saved'])\r\n  \r\n  const defaultForm = {\r\n    name: '',\r\n    description: '',\r\n    settings: {},\r\n    isActive: true\r\n  }\r\n  \r\n  const form = ref({ ...defaultForm })\r\n  const settingsJson = ref('{}')\r\n  const jsonError = ref('')\r\n  const saving = ref(false)\r\n  \r\n  const isEditing = computed(() => !!props.config)\r\n  \r\n  // Watch for changes in the config prop\r\n  watch(() => props.config, (newConfig) => {\r\n    if (newConfig) {\r\n      form.value = { ...newConfig }\r\n      settingsJson.value = JSON.stringify(newConfig.settings || {}, null, 2)\r\n    } else {\r\n      resetForm()\r\n    }\r\n  }, { immediate: true })\r\n  \r\n  function validateJson() {\r\n    try {\r\n      if (settingsJson.value) {\r\n        JSON.parse(settingsJson.value)\r\n        jsonError.value = ''\r\n        return true\r\n      }\r\n      return true\r\n    } catch (e) {\r\n      jsonError.value = 'Invalid JSON format'\r\n      return false\r\n    }\r\n  }\r\n  \r\n  function resetForm() {\r\n    if (isEditing.value) {\r\n      emit('saved')\r\n    } else {\r\n      form.value = { ...defaultForm }\r\n      settingsJson.value = '{}'\r\n      jsonError.value = ''\r\n    }\r\n  }\r\n  \r\n  async function saveConfig() {\r\n    if (!validateJson()) return\r\n    \r\n    saving.value = true\r\n    \r\n    try {\r\n      // Parse the JSON settings\r\n      const settings = settingsJson.value ? JSON.parse(settingsJson.value) : {}\r\n      \r\n      if (isEditing.value) {\r\n        // Update existing document\r\n        const docRef = doc(db, 'demoConfigs', props.config.id)\r\n        await updateDoc(docRef, {\r\n          name: form.value.name,\r\n          description: form.value.description,\r\n          settings,\r\n          isActive: form.value.isActive,\r\n          updatedAt: serverTimestamp()\r\n        })\r\n      } else {\r\n        // Create new document\r\n        await addDoc(collection(db, 'demoConfigs'), {\r\n          name: form.value.name,\r\n          description: form.value.description,\r\n          settings,\r\n          isActive: form.value.isActive,\r\n          createdAt: serverTimestamp(),\r\n          updatedAt: serverTimestamp()\r\n        })\r\n      }\r\n      \r\n      // Reset form and notify parent\r\n      resetForm()\r\n      emit('saved')\r\n    } catch (error) {\r\n      console.error('Error saving demo config:', error)\r\n      alert('Failed to save demo configuration')\r\n    } finally {\r\n      saving.value = false\r\n    }\r\n  }\r\n  </script>\r\n  "],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAiEQ,UAAA,EAAE,UAAU,IAAI,WAAW;AACxB,cAAU;AAEnB,UAAM,QAAQ;AAOd,UAAM,OAAO;AAEb,UAAM,cAAc;AAAA,MAClB,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU,CAAC;AAAA,MACX,UAAU;AAAA,IACZ;AAEA,UAAM,OAAO,IAAI,EAAE,GAAG,aAAa;AAC7B,UAAA,eAAe,IAAI,IAAI;AACvB,UAAA,YAAY,IAAI,EAAE;AAClB,UAAA,SAAS,IAAI,KAAK;AAExB,UAAM,YAAY,SAAS,MAAM,CAAC,CAAC,MAAM,MAAM;AAG/C,UAAM,MAAM,MAAM,QAAQ,CAAC,cAAc;AACvC,UAAI,WAAW;AACR,aAAA,QAAQ,EAAE,GAAG,UAAU;AACf,qBAAA,QAAQ,KAAK,UAAU,UAAU,YAAY,CAAA,GAAI,MAAM,CAAC;AAAA,MAAA,OAChE;AACK,kBAAA;AAAA,MAAA;AAAA,IACZ,GACC,EAAE,WAAW,MAAM;AAEtB,aAAS,eAAe;AAClB,UAAA;AACF,YAAI,aAAa,OAAO;AACjB,eAAA,MAAM,aAAa,KAAK;AAC7B,oBAAU,QAAQ;AACX,iBAAA;AAAA,QAAA;AAEF,eAAA;AAAA,eACA,GAAG;AACV,kBAAU,QAAQ;AACX,eAAA;AAAA,MAAA;AAAA,IACT;AAGF,aAAS,YAAY;AACnB,UAAI,UAAU,OAAO;AACnB,aAAK,OAAO;AAAA,MAAA,OACP;AACA,aAAA,QAAQ,EAAE,GAAG,YAAY;AAC9B,qBAAa,QAAQ;AACrB,kBAAU,QAAQ;AAAA,MAAA;AAAA,IACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}